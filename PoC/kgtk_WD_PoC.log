Claims e Qualificações da WD - Junho 2022
INICIO Current date Wed 02 Aug 2023 03:57:18 PM -03
WD1.0 Preparar ambiente Wed 02 Aug 2023 03:57:18 PM -03
Graph Cache:
DB file: /tmp/kgtk-graph-cache-cloud-di.sqlite3.db
  size:  84.59 GB   	free:  0 Bytes   	modified:  2023-08-02 15:17:19

KGTK File Information:
quals:
  size:  2.66 GB   	modified:  2022-12-02 18:31:14   	graph:  graph_2
c:
  size:  11.53 GB   	modified:  2022-10-29 23:58:12   	graph:  graph_3
lab:
  size:  679.79 MB   	modified:  2023-01-03 00:32:53   	graph:  graph_4
alias:
  size:  187.64 MB   	modified:  2022-11-01 16:45:54   	graph:  graph_1
f:
  size:  10.85 MB   	modified:  2023-08-02 15:16:42   	graph:  graph_7
p:
  size:  10.22 KB   	modified:  2023-08-02 15:16:51   	graph:  graph_8

Graph Table Information:
graph_1:
  size:  925.48 MB   	created:  2023-08-01 11:54:29
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_2:
  size:  26.98 GB   	created:  2023-08-01 12:19:43
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_3:
  size:  52.15 GB   	created:  2023-08-01 14:29:00
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_4:
  size:  4.52 GB   	created:  2023-08-01 14:33:17
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_7:
  size:  15.94 MB   	created:  2023-08-02 15:17:07
  header:  ['id', 'node1', 'node1;label', 'label', 'label;label', 'node2', 'node2;label']
graph_8:
  size:  36.86 KB   	created:  2023-08-02 15:16:52
  header:  ['node1', 'label', 'node2']
Elapsed time: 1.23 seconds
id	node1	label	node2	lang	rank	node2;wikidatatype
P10-alias-en-282226-0	P10	alias	'gif'@en	en		
P10-alias-en-2f86d8-0	P10	alias	'animation'@en	en		
P10-alias-en-c1427e-0	P10	alias	'media'@en	en		
Elapsed time: 1.04 seconds
id	node1	label	node2	lang	rank	node2;wikidatatype
P10-P1630-53947a-fbe9093e-0-P407-Q20923490-0	P10-P1630-53947a-fbe9093e-0	P407	Q20923490			wikibase-item
P10-P1855-Q15075950-7eff6d65-0-P10-54b214-0	P10-P1855-Q15075950-7eff6d65-0	P10	"Smoorverliefd 12 september.webm"			commonsMedia
P10-P1855-Q15075950-7eff6d65-0-P3831-Q622550-0	P10-P1855-Q15075950-7eff6d65-0	P3831	Q622550			wikibase-item
Elapsed time: 1.35 seconds
id	node1	label	node2	lang	rank	node2;wikidatatype
P10-P1628-32b85d-7927ece6-0	P10	P1628	"http://www.w3.org/2006/vcard/ns#Video"		normal	url
P10-P1628-acf60d-b8950832-0	P10	P1628	"https://schema.org/video"		normal	url
P10-P1629-Q34508-bcc39400-0	P10	P1629	Q34508		normal	wikibase-item
Elapsed time: 1.15 seconds
id	node1	label	node2	lang	rank	node2;wikidatatype
P10-label-en	P10	label	'video'@en	en		
P1000-label-en	P1000	label	'record held'@en	en		
P10000-label-en	P10000	label	'Research Vocabularies Australia ID'@en	en		
Elapsed time: 1.04 seconds
Graph Cache:
DB file: /tmp/kgtk-graph-cache-cloud-di.sqlite3.db
  size:  84.59 GB   	free:  0 Bytes   	modified:  2023-08-02 15:57:23

KGTK File Information:
quals:
  size:  2.66 GB   	modified:  2022-12-02 18:31:14   	graph:  graph_2
c:
  size:  11.53 GB   	modified:  2022-10-29 23:58:12   	graph:  graph_3
lab:
  size:  679.79 MB   	modified:  2023-01-03 00:32:53   	graph:  graph_4
alias:
  size:  187.64 MB   	modified:  2022-11-01 16:45:54   	graph:  graph_1
f:
  size:  10.85 MB   	modified:  2023-08-02 15:16:42   	graph:  graph_7
p:
  size:  10.22 KB   	modified:  2023-08-02 15:16:51   	graph:  graph_8

Graph Table Information:
graph_1:
  size:  925.48 MB   	created:  2023-08-01 11:54:29
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_2:
  size:  26.98 GB   	created:  2023-08-01 12:19:43
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_3:
  size:  52.15 GB   	created:  2023-08-01 14:29:00
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_4:
  size:  4.52 GB   	created:  2023-08-01 14:33:17
  header:  ['id', 'node1', 'label', 'node2', 'lang', 'rank', 'node2;wikidatatype']
graph_7:
  size:  15.94 MB   	created:  2023-08-02 15:17:07
  header:  ['id', 'node1', 'node1;label', 'label', 'label;label', 'node2', 'node2;label']
graph_8:
  size:  36.86 KB   	created:  2023-08-02 15:16:52
  header:  ['node1', 'label', 'node2']
Elapsed time: 1.29 seconds
WD1.1 Filtrar CLAIMS para o conjunto completo com os tipos de interesse Wed 02 Aug 2023 03:57:25 PM -03
Starting 'query' on pid 492310.
[2023-08-02 15:57:26 query]: SQL Translation:
---------------------------------------------
  SELECT graph_3_c2."id" "_aLias.id", graph_3_c1."node1" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_3_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_3 AS graph_3_c1, graph_4 AS graph_4_c3
     INNER JOIN graph_3 AS graph_3_c2, graph_4 AS graph_4_c4
     ON graph_3_c1."node1" = graph_3_c2."node1"
        AND graph_3_c1."node1" = graph_4_c4."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND (graph_3_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_3_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_4_c4."node2" ASC, graph_3_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['P31', 'Q859563']
---------------------------------------------
Elapsed time: 1732.21 seconds
Starting 'query' on pid 492394.
[2023-08-02 16:26:20 query]: SQL Translation:
---------------------------------------------
  SELECT graph_3_c2."id" "_aLias.id", graph_3_c1."node1" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_3_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_3 AS graph_3_c1, graph_4 AS graph_4_c3
     INNER JOIN graph_3 AS graph_3_c2, graph_4 AS graph_4_c4
     ON graph_3_c1."node1" = graph_3_c2."node1"
        AND graph_3_c1."node1" = graph_4_c4."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND (graph_3_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_3_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_4_c4."node2" ASC, graph_3_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['P31', 'Q512187']
---------------------------------------------
Elapsed time: 1770.01 seconds
Starting 'query' on pid 492427.
[2023-08-02 16:55:49 query]: SQL Translation:
---------------------------------------------
  SELECT graph_3_c2."id" "_aLias.id", graph_3_c1."node1" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_3_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_3 AS graph_3_c1, graph_4 AS graph_4_c3
     INNER JOIN graph_3 AS graph_3_c2, graph_4 AS graph_4_c4
     ON graph_3_c1."node1" = graph_3_c2."node1"
        AND graph_3_c1."node1" = graph_4_c4."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND (graph_3_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_3_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_4_c4."node2" ASC, graph_3_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['P31', 'Q6256']
---------------------------------------------
Elapsed time: 1943.39 seconds
WD1.2 Contar Predicados do conjunto filtrado Wed 02 Aug 2023 05:28:10 PM -03
Starting 'unique' on pid 492467.
Elapsed time: 2.42 seconds
Starting 'query' on pid 492476.
[2023-08-02 17:28:14 sqlstore]: IMPORT graph directly into table graph_9 from /app/kgtk/data/WD_PoC/secular_state-pred-counted.tsv ...
[2023-08-02 17:28:14 sqlstore]: DROP graph data table graph_8
[2023-08-02 17:28:14 query]: SQL Translation:
---------------------------------------------
  SELECT graph_9_c1."node1" "_aLias.node1", graph_4_c3."node2" "_aLias.node1;label", ? "_aLias.label", cast(graph_9_c1."node2" AS integer) "_aLias.node2"
     FROM graph_9 AS graph_9_c1
     LEFT JOIN graph_4 AS graph_4_c3
     ON graph_9_c1."node1" = graph_4_c3."node1"
     ORDER BY cast(graph_9_c1."node2" AS integer) DESC
  PARAS: ['count']
---------------------------------------------
[2023-08-02 17:28:14 sqlstore]: CREATE INDEX "graph_9_node1_idx" ON "graph_9" ("node1")
[2023-08-02 17:28:14 sqlstore]: ANALYZE "graph_9_node1_idx"
Elapsed time: 1.62 seconds
Starting 'unique' on pid 492499.
Elapsed time: 1.30 seconds
Starting 'query' on pid 492508.
[2023-08-02 17:28:17 sqlstore]: IMPORT graph directly into table graph_8 from /app/kgtk/data/WD_PoC/federal_republic-pred-counted.tsv ...
[2023-08-02 17:28:17 sqlstore]: DROP graph data table graph_9
[2023-08-02 17:28:17 query]: SQL Translation:
---------------------------------------------
  SELECT graph_8_c1."node1" "_aLias.node1", graph_4_c3."node2" "_aLias.node1;label", ? "_aLias.label", cast(graph_8_c1."node2" AS integer) "_aLias.node2"
     FROM graph_8 AS graph_8_c1
     LEFT JOIN graph_4 AS graph_4_c3
     ON graph_8_c1."node1" = graph_4_c3."node1"
     ORDER BY cast(graph_8_c1."node2" AS integer) DESC
  PARAS: ['count']
---------------------------------------------
[2023-08-02 17:28:17 sqlstore]: CREATE INDEX "graph_8_node1_idx" ON "graph_8" ("node1")
[2023-08-02 17:28:17 sqlstore]: ANALYZE "graph_8_node1_idx"
Elapsed time: 1.51 seconds
Starting 'unique' on pid 492531.
Elapsed time: 1.46 seconds
Starting 'query' on pid 492540.
[2023-08-02 17:28:20 sqlstore]: IMPORT graph directly into table graph_9 from /app/kgtk/data/WD_PoC/countries-pred-counted.tsv ...
[2023-08-02 17:28:20 sqlstore]: DROP graph data table graph_8
[2023-08-02 17:28:20 query]: SQL Translation:
---------------------------------------------
  SELECT graph_9_c1."node1" "_aLias.node1", graph_4_c3."node2" "_aLias.node1;label", ? "_aLias.label", cast(graph_9_c1."node2" AS integer) "_aLias.node2"
     FROM graph_9 AS graph_9_c1
     LEFT JOIN graph_4 AS graph_4_c3
     ON graph_9_c1."node1" = graph_4_c3."node1"
     ORDER BY cast(graph_9_c1."node2" AS integer) DESC
  PARAS: ['count']
---------------------------------------------
[2023-08-02 17:28:20 sqlstore]: CREATE INDEX "graph_9_node1_idx" ON "graph_9" ("node1")
[2023-08-02 17:28:20 sqlstore]: ANALYZE "graph_9_node1_idx"
Elapsed time: 1.54 seconds
WD1.3 Contar QNodes do conjunto filtrado Wed 02 Aug 2023 05:28:20 PM -03
Starting 'sort' on pid 492575.
Starting 'unique' on pid 492572.
Elapsed time: 2.61 seconds
Starting 'sort' on pid 492611.
Starting 'unique' on pid 492608.
Elapsed time: 2.72 seconds
Starting 'sort' on pid 492647.
Starting 'unique' on pid 492644.
Elapsed time: 3.09 seconds
WD1.4 Obter Qualificações dos Conjuntos de interesse Wed 02 Aug 2023 05:28:29 PM -03
Starting 'query' on pid 492673.
[2023-08-02 17:28:30 sqlstore]: IMPORT graph directly into table graph_8 from /app/kgtk/data/WD_PoC/secular_state-claims.tsv ...
[2023-08-02 17:28:30 sqlstore]: DROP graph data table graph_7
[2023-08-02 17:28:31 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c2."id" "_aLias.id", graph_8_c1."id" "_aLias.node1", ? "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_2_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_2 AS graph_2_c2, graph_4 AS graph_4_c3
     INNER JOIN graph_8 AS graph_8_c1
     ON graph_8_c1."id" = graph_2_c2."node1"
        AND (graph_2_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_2_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_8_c1."id" ASC, graph_2_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['']
---------------------------------------------
[2023-08-02 17:28:31 sqlstore]: CREATE INDEX "graph_8_id_idx" ON "graph_8" ("id")
[2023-08-02 17:28:31 sqlstore]: ANALYZE "graph_8_id_idx"
Elapsed time: 3.53 seconds
Starting 'query' on pid 492696.
[2023-08-02 17:28:34 sqlstore]: IMPORT graph directly into table graph_7 from /app/kgtk/data/WD_PoC/federal_republic-claims.tsv ...
[2023-08-02 17:28:34 sqlstore]: DROP graph data table graph_8
[2023-08-02 17:28:34 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c2."id" "_aLias.id", graph_7_c1."id" "_aLias.node1", ? "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_2_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_2 AS graph_2_c2, graph_4 AS graph_4_c3
     INNER JOIN graph_7 AS graph_7_c1
     ON graph_7_c1."id" = graph_2_c2."node1"
        AND (graph_2_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_2_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_7_c1."id" ASC, graph_2_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['']
---------------------------------------------
[2023-08-02 17:28:34 sqlstore]: CREATE INDEX "graph_7_id_idx" ON "graph_7" ("id")
[2023-08-02 17:28:34 sqlstore]: ANALYZE "graph_7_id_idx"
Elapsed time: 2.51 seconds
Starting 'query' on pid 492719.
[2023-08-02 17:28:36 sqlstore]: IMPORT graph directly into table graph_8 from /app/kgtk/data/WD_PoC/countries-claims.tsv ...
[2023-08-02 17:28:37 sqlstore]: DROP graph data table graph_7
[2023-08-02 17:28:37 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c2."id" "_aLias.id", graph_8_c1."id" "_aLias.node1", ? "_aLias.node1;label", graph_4_c3."node1" "_aLias.label", graph_4_c3."node2" "_aLias.label;label", graph_2_c2."node2" "_aLias.node2", graph_4_c7."node2" "_aLias.node2;label"
     FROM graph_2 AS graph_2_c2, graph_4 AS graph_4_c3
     INNER JOIN graph_8 AS graph_8_c1
     ON graph_8_c1."id" = graph_2_c2."node1"
        AND (graph_2_c2."label" = graph_4_c3."node1")
     LEFT JOIN graph_4 AS graph_4_c7
     ON graph_2_c2."node2" = graph_4_c7."node1"
     ORDER BY graph_8_c1."id" ASC, graph_2_c2."label" ASC, graph_4_c7."node2" ASC
  PARAS: ['']
---------------------------------------------
[2023-08-02 17:28:37 sqlstore]: CREATE INDEX "graph_8_id_idx" ON "graph_8" ("id")
[2023-08-02 17:28:37 sqlstore]: ANALYZE "graph_8_id_idx"
Elapsed time: 9.02 seconds
WD1.5 Contar Qualificadores do conjunto filtrado Wed 02 Aug 2023 05:28:44 PM -03
Starting 'query' on pid 492744.
[2023-08-02 17:28:45 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c3."label" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_3_c2."label" "_aLias.node1;pred", graph_4_c5."node2" "_aLias.node1;pred_label", ? "_aLias.label", count(graph_2_c3."label") "_aLias.node2"
     FROM graph_2 AS graph_2_c3, graph_3 AS graph_3_c1, graph_4 AS graph_4_c4, graph_4 AS graph_4_c5
     INNER JOIN graph_3 AS graph_3_c2
     ON graph_3_c2."id" = graph_2_c3."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND ((graph_2_c3."label" = graph_4_c4."node1") AND (graph_3_c2."label" = graph_4_c5."node1"))
     GROUP BY "_aLias.node1", "_aLias.node1;label", "_aLias.node1;pred", "_aLias.node1;pred_label", "_aLias.label"
     ORDER BY graph_3_c2."label" ASC, graph_2_c3."label" ASC
  PARAS: ['count', 'P31', 'Q859563']
---------------------------------------------
Traceback (most recent call last):
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/cli/query.py", line 300, in run
    result = query.execute()
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/kypher/query.py", line 1127, in execute
    result = self.store.execute(state.get_sql(), state.get_parameters())
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/kypher/sqlstore.py", line 286, in execute
    return self.get_conn().execute(*args, **kwargs)
sqlite3.OperationalError: database or disk is full

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/exceptions.py", line 70, in __call__
    return_code = func(*args, **kwargs) or 0
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/cli/query.py", line 328, in run
    raise KGTKException(str(e) + '\n')
kgtk.exceptions.KGTKException: database or disk is full

database or disk is full

Command exited with non-zero status 1
Elapsed time: 4374.97 seconds
Starting 'query' on pid 492773.
[2023-08-02 18:41:40 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c3."label" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_3_c2."label" "_aLias.node1;pred", graph_4_c5."node2" "_aLias.node1;pred_label", ? "_aLias.label", count(graph_2_c3."label") "_aLias.node2"
     FROM graph_2 AS graph_2_c3, graph_3 AS graph_3_c1, graph_4 AS graph_4_c4, graph_4 AS graph_4_c5
     INNER JOIN graph_3 AS graph_3_c2
     ON graph_3_c2."id" = graph_2_c3."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND ((graph_2_c3."label" = graph_4_c4."node1") AND (graph_3_c2."label" = graph_4_c5."node1"))
     GROUP BY "_aLias.node1", "_aLias.node1;label", "_aLias.node1;pred", "_aLias.node1;pred_label", "_aLias.label"
     ORDER BY graph_3_c2."label" ASC, graph_2_c3."label" ASC
  PARAS: ['count', 'P31', 'Q512187']
---------------------------------------------
Traceback (most recent call last):
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/cli/query.py", line 300, in run
    result = query.execute()
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/kypher/query.py", line 1127, in execute
    result = self.store.execute(state.get_sql(), state.get_parameters())
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/kypher/sqlstore.py", line 286, in execute
    return self.get_conn().execute(*args, **kwargs)
sqlite3.OperationalError: database or disk is full

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/exceptions.py", line 70, in __call__
    return_code = func(*args, **kwargs) or 0
  File "/app/kgtk/miniconda3/lib/python3.9/site-packages/kgtk/cli/query.py", line 328, in run
    raise KGTKException(str(e) + '\n')
kgtk.exceptions.KGTKException: database or disk is full

database or disk is full

Command exited with non-zero status 1
Elapsed time: 4196.60 seconds
Starting 'query' on pid 492890.
[2023-08-02 19:51:37 query]: SQL Translation:
---------------------------------------------
  SELECT graph_2_c3."label" "_aLias.node1", graph_4_c4."node2" "_aLias.node1;label", graph_3_c2."label" "_aLias.node1;pred", graph_4_c5."node2" "_aLias.node1;pred_label", ? "_aLias.label", count(graph_2_c3."label") "_aLias.node2"
     FROM graph_2 AS graph_2_c3, graph_3 AS graph_3_c1, graph_4 AS graph_4_c4, graph_4 AS graph_4_c5
     INNER JOIN graph_3 AS graph_3_c2
     ON graph_3_c2."id" = graph_2_c3."node1"
        AND graph_3_c1."label" = ?
        AND graph_3_c1."node2" = ?
        AND ((graph_2_c3."label" = graph_4_c4."node1") AND (graph_3_c2."label" = graph_4_c5."node1"))
     GROUP BY "_aLias.node1", "_aLias.node1;label", "_aLias.node1;pred", "_aLias.node1;pred_label", "_aLias.label"
     ORDER BY graph_3_c2."label" ASC, graph_2_c3."label" ASC
  PARAS: ['count', 'P31', 'Q6256']
---------------------------------------------
